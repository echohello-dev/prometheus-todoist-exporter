name: Publish to PyPI

on:
  workflow_run:
    workflows: ["Release Please"]
    types:
      - completed

jobs:
  publish-pypi:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Check for release
        id: check-release
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "no-tag")
          if [[ $LATEST_TAG =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Found release tag: $LATEST_TAG"
            echo "release_found=true" >> $GITHUB_OUTPUT
            echo "release_tag=$LATEST_TAG" >> $GITHUB_OUTPUT
          else
            echo "No release tag found"
            echo "release_found=false" >> $GITHUB_OUTPUT
          fi

      - name: Install asdf
        if: steps.check-release.outputs.release_found == 'true'
        uses: asdf-vm/actions/setup@v2

      - name: Setup asdf plugins
        if: steps.check-release.outputs.release_found == 'true'
        run: |
          asdf plugin add python || true
          asdf plugin add poetry || true

      - name: Install tools with asdf
        if: steps.check-release.outputs.release_found == 'true'
        run: |
          asdf install

      - name: Install dependencies
        if: steps.check-release.outputs.release_found == 'true'
        run: |
          asdf exec poetry install --no-dev

      - name: Build and publish to PyPI
        if: steps.check-release.outputs.release_found == 'true'
        env:
          PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          asdf exec poetry config pypi-token.pypi $PYPI_API_TOKEN
          asdf exec poetry build
          asdf exec poetry publish
